###############################
# US IOOS GLIDER DAC 3.0 ENCODER
CFnamelist:
  time:
    standard_name: "time"
    long_name: "Time"
    units: "seconds since 1970-01-01T00:00:00Z"
    calendar: "gregorian"
    observation_type: "measured"
    comment: "glider time record seconds since 1970. Time is merged time between glider flight and science computers"
  lat:
    standard_name: "latitude"
    long_name: "latitude"
    units: "degree_north"
    comment: "glider platform latitude incorporating underwater positioning corrected for dead reckoninig errors associated with underwater currents and glider GPS surface positions"
    ancillary_variables: "m_gps_lat"
    coordinate_reference_frame: "urn:ogc:crs:EPSG::4326"
    observation_type: "measured"
    platform: "platform"
    reference: "WGS84"
    valid_max: "** COMMAND:np.nanmax(nc['lati'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['lat'].data)"
  lon:
    standard_name: "longitude"
    long_name: "longitude"
    units: "degree_east"
    comment: "glider platform longitude incorporating underwater positioning corrected for dead reckoninig errors associated with underwater currents and glider GPS surface positions"
    ancillary_variables: "m_gps_lon"
    coordinate_reference_frame: "urn:ogc:crs:EPSG::4326"
    observation_type: "measured"
    platform: "platform"
    reference: "WGS84"
    valid_max: "** COMMAND:np.nanmax(nc['lon'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['lon'].data)"
  pressure:
    standard_name: "sea_water_pressure"
    long_name: "pressure"
    units: "dbar"
    accuracy: "0.01"
    ancillary_variables: "sci_water_pressure"
    instrument: "instrument_ctd"
    observation_type: "measured"
    platform: "platform"
    positive: "down"
    reference_datum: "sea-surface"
    precision: "** COMMAND:np.nanmedian(np.diff(nc['pressure'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(nc['time'].data[~np.isnan(nc['pressure'])]))"
    valid_max: "** COMMAND:np.nanmax(nc['pressure'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['pressure'].data)"
    comment: "measured by glider CTD pressure sensor"
  depth:
    standard_name: "depth"
    long_name: "depth"
    units: "meter"
    accuracy: ""
    ancillary_variables: "sci_water_pressure"
    instrument: "instrument_ctd"
    observation_type: "calculated"
    platform: "platform"
    positive: "down"
    accuracy: "0.01"
    reference_datum: "sea-surface"
    precision: "** COMMAND:np.nanmedian(np.diff(nc['depth'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(nc['time'].data[~np.isnan(nc['depth'])]))"
    valid_max: "** COMMAND:np.nanmax(nc['depth'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['depth'].data)"
    comment: "vertical distance below sea surface calculated from CTD pressure sensor sci_water_pressure"
  profile_time:
    standard_name: "time"
    units: "seconds since 1970-01-01T00:00:00Z"
    long_name: "Profile Center Time"
    comment: "Timestamp corresponding to the mid-point of the profile"
    observation_type: "measured"
    platform: "platform"
  profile_lat:
    standard_name: "latitude"
    units: "degrees_north"
    long_name: "Profile Center Latitude"
    comment: "Latitude corresponding to the mid-point of the profile"
    observation_type: "measured"
    platform: "platform"
    reference: ""
    valid_max: "** COMMAND:np.nanmax(nc['profile_lat'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['profile_lat'].data)"
  profile_lon:
    standard_name: "longitude"
    units: "degrees_east"
    long_name: "Profile Center Longitude"
    comment: "Longitude corresponding to the mid-point of the profile"
    observation_type: "measured"
    platform: "platform"
    reference: ""
    valid_max: "** COMMAND:np.nanmax(nc['profile_lon'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['profile_lat'].data)"
  lon_uv:
    standard_name: "longitude"
    units: "degrees_east"
    long_name: "Profile Center Eastward Current"
    comment: "Longitude corresponding to the mid-point of the profile"
    observation_type: "measured"
    platform: "platform"
    reference: ""
    valid_max: "** COMMAND:np.nanmax(nc['lon_uv'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['lat_uv'].data)"
  lat_uv:
    standard_name: "latitude"
    units: "degrees_north"
    long_name: "Profile Center Northward Current"
    comment: "Longitude corresponding to the mid-point of the profile"
    observation_type: "measured"
    platform: "platform"
    reference: ""
    valid_max: "** COMMAND:np.nanmax(nc['lon_uv'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['lat_uv'].data)"
  # profile_index:
  #   standard_name: "profile_index"
  #   long_name: "glider_dive_profile_index"
  #   units: ""
  #   comment: "profile index computed from glider CTD depth to extract profiles for identifying valid profiles in the glider record, based on the SOCIB toolbox. The output has integers for valid profiles (dive or climb) and fractions denote in-between dive states or hovering states"
  # profile_direction:
  #   standard_name: "profile_direction"
  #   long_name: "glider_dive_profile_direction"
  #   units: " "
  #   comment: "profile direction indicating dive (-1) or climb (+1)"
  v:
    standard_name: "northward_sea_water_velocity"
    long_name: "northward_sea_water_velocity"
    observation_type: "calculated"
    units: "m s-1"
    accuracy: " "
    platform: "platform"
    ancillary_varialbes: "m_final_vy"
    valid_max: "** COMMAND:np.nanmax(nc['v'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['v'].data)"
    comment: "measured depth-average of sea water velocity pointing positive North, computed as an average over a glider dive segement between surfacing locations. The value comes from m_water_final_vy"
  u:
    standard_name: "eastward_sea_water_velocity"
    long_name: "eastward_sea_water_velocity"
    observation_type: "calculated"
    platform: "platform"
    units: "m s-1"
    accuracy: " "
    valid_max: "** COMMAND:np.nanmax(nc['u'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['u'].data)"
    ancillary_varialbes: "m_final_vx"
    comment: "measured depth-average of sea water velocity pointing positive East, computed as an average over a glider dive segement between surfacing locations. The value comes from m_water_final_vx"
## CTD
  conductivity:
    standard_name: "sea_water_electrical_conductivity"
    long_name: "sea_water_electrical_conductivity"
    units: "S m-1"
    accuracy: ""
    ancillary_variables: "sci_water_cond"
    instrument: "instrument_ctd"
    observation_type: "measured"
    accuracy: "0.005"
    platform: "platform"
    precision: "** COMMAND:np.nanmedian(np.diff(nc['conductivity'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(nc['time'].data[~np.isnan(nc['conductivity'])]))"
    valid_max: "** COMMAND:np.nanmax(nc['conductivity'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['conductivity'].data)"
    comment: "ambient seawater conductivity measured by glider CTD sensor sci_water_cond"
  temperature:
    standard_name: "sea_water_temperature"
    long_name: "sea_water_temperature"
    units: "degrees_C"
    accuracy: "0.001"
    ancillary_variables: "sci_water_temp"
    instrument: "instrument_ctd"
    observation_type: "measured"
    platform: "platform"
    precision: "** COMMAND:np.nanmedian(np.diff(nc['temperature'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(nc['time'].data[~np.isnan(nc['temperature'])]))"
    valid_max: "** COMMAND:np.nanmax(nc['temperature'])"
    valid_min: "** COMMAND:np.nanmin(nc['temperature'])"
    comment: "ambient seawater temperature measured by glider CTD sensor sci_water_temp"
  salinity:
    standard_name: "sea_water_practical_salinity"
    long_name: "sea_water_practical_salinity"
    units: "PSU"
    comment: "practical salinity computed from conductivity, temperature and pressure using the Gibbs-SeaWater (GSW) Oceanographic toolbox {https://www.teos-10.org/software.htm}"
    platform: "platform"
    instrument: "instrument_ctd"
    observation_type: "calculated"
    accuracy: "0.01"
    ancillary_variables: "salinity_qc"
    precision: "** COMMAND:np.nanmedian(np.diff(nc['salinity'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(nc['time'].data[~np.isnan(nc['salinity'])]))"
    valid_max: "** COMMAND:np.nanmax(nc['salinity'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['salinity'].data)"
  density:
    standard_name: "sea_water_density"
    long_name: "sea_water_density"
    units: "kg m-3"
    accuracy: "0.01"
    ancillary_variables: "sci_water_cond,sci_water_pressure,sci_water_temp"
    instrument: "instrument_ctd"
    observation_type: "calculated"
    platform: "platform"
    precision: "** COMMAND:np.nanmedian(np.diff(nc['density'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(nc['time'].data[~np.isnan(nc['density'])]))"
    valid_max: "** COMMAND:np.nanmax(nc['density'].data)"
    valid_min: "** COMMAND:np.nanmin(nc['density'].data)"
    comment: "in-situ seawater density calculated from salinity, temperature and pressure using the Gibbs-SeaWater (GSW) Oceanographic toolbox {https://www.teos-10.org/software.htm}"
## OXYGEN
  oxygen_sensor_temperature:
    standard_name: "temperature_of_sensor_for_oxygen_in_sea_water"
    long_name: "temperature_of_sensor_for_oxygen_in_sea_water"
    units: "degree_C"
    comment: "temperature of oxygen sensor used to compute oxygen concentration duplicated from sci_oxy4_temperature"
  oxygen_concentration:
    standard_name: "oxygen_concentration"
    long_name: "mole_concentration_of_dissolved_molecular_oxygen_in_sea_water"
    units: "micro-mol L"
    comment: "oxygen concentration measured by glider sensor from sci_oxy4_oxygen, compensated for salinity using code from Henry Bittig."
