###############################
# US IOOS GLIDER DAC 3.0 ENCODER -> PLEASE PUT THESE INTO A NEW FILE
#%YAML 1.2
#%TAG ! tag:mungliders.com,2023:
---
CFnamelist:
  time:
    standard_name: "time"
    long_name: "Time"
    units: "seconds since 1970-01-01T00:00:00Z"
    calendar: "gregorian"
    observation_type: "measured"
    comment: "glider time record seconds since 1970. Time is merged time between glider flight and science computers"
    valid_max: "** COMMAND:np.nanmax(data['time'].data)"
    valid_min: "** COMMAND:np.nanmin(data['time'].data)"
  time_uv:
    standard_name: "time"
    long_name: "Depth-Averaged Time"
    units: "seconds since 1970-01-01T00:00:00Z"
    calendar: "gregorian"
    observation_type: "measured"
    comment: "glider time record seconds since 1970. Time is merged time between glider flight and science computers"
    valid_max: "** COMMAND:np.nanmax(data['time_uv'].data)"
    valid_min: "** COMMAND:np.nanmin(data['time_uv'].data)"
  lat:
    standard_name: "latitude"
    long_name: "latitude"
    units: "degree_north"
    comment: "glider platform latitude idataorporating underwater positioning corrected for dead reckoninig errors associated with underwater currents and glider GPS surface positions"
    ancillary_variables: "m_gps_lat"
    coordinate_reference_frame: "urn:ogc:crs:EPSG::4326"
    observation_type: "measured"
    platform: "platform"
    reference: "WGS84"
    valid_max: "** COMMAND:np.nanmax(data['lat'].data)"
    valid_min: "** COMMAND:np.nanmin(data['lat'].data)"
  lon:
    standard_name: "longitude"
    long_name: "longitude"
    units: "degree_east"
    comment: "glider platform longitude incorporating underwater positioning corrected for dead reckoninig errors associated with underwater currents and glider GPS surface positions"
    ancillary_variables: "m_gps_lon"
    coordinate_reference_frame: "urn:ogc:crs:EPSG::4326"
    observation_type: "measured"
    platform: "platform"
    reference: "WGS84"
    valid_max: "** COMMAND:np.nanmax(data['lon'].data)"
    valid_min: "** COMMAND:np.nanmin(data['lon'].data)"
  pressure:
    standard_name: "sea_water_pressure"
    long_name: "pressure"
    units: "dbar"
    accuracy: "0.01"
    ancillary_variables: "sci_water_pressure"
    instrument: "instrument_ctd"
    observation_type: "measured"
    platform: "platform"
    positive: "down"
    reference_datum: "sea-surface"
    precision: "** COMMAND:np.nanmedian(np.diff(data['pressure'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(data['time'].data[~np.isnan(data['pressure'])]))"
    valid_max: "** COMMAND:np.nanmax(data['pressure'].data)"
    valid_min: "** COMMAND:np.nanmin(data['pressure'].data)"
    comment: "measured by glider CTD pressure sensor"
  depth:
    standard_name: "depth"
    long_name: "depth"
    units: "meter"
    ancillary_variables: "sci_water_pressure"
    instrument: "instrument_ctd"
    observation_type: "calculated"
    platform: "platform"
    positive: "down"
    accuracy: "0.01"
    reference_datum: "sea-surface"
    precision: "** COMMAND:np.nanmedian(np.diff(data['depth'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(data['time'].data[~np.isnan(data['depth'])]))"
    valid_max: "** COMMAND:np.nanmax(data['depth'].data)"
    valid_min: "** COMMAND:np.nanmin(data['depth'].data)"
    comment: "vertical distance below sea surface calculated from CTD pressure sensor sci_water_pressure"
  profile_time:
    standard_name: "time"
    units: "seconds since 1970-01-01T00:00:00Z"
    long_name: "Profile Center Time"
    comment: "Timestamp corresponding to the mid-point of the profile"
    observation_type: "calculated"
    platform: "platform"
  profile_lat:
    standard_name: "latitude"
    units: "degrees_north"
    long_name: "Profile Center Latitude"
    comment: "Latitude corresponding to the mid-point of the profile"
    observation_type: "calculated"
    platform: "platform"
    reference: "WGS84"
    coordinate_reference_frame: "urn:ogc:crs:EPSG::4326"
#    valid_max: "** COMMAND:np.nanmax(data['profile_lat'].data)"
#    valid_min: "** COMMAND:np.nanmin(data['profile_lat'].data)"
  profile_lon:
    standard_name: "longitude"
    units: "degrees_east"
    long_name: "Profile Center Longitude"
    comment: "Longitude corresponding to the mid-point of the profile"
    observation_type: "calculated"
    platform: "platform"
    reference: "WGS84"
    coordinate_reference_frame: "urn:ogc:crs:EPSG::4326"
#    valid_max: "** COMMAND:np.nanmax(data['profile_lon'].data)"
#    valid_min: "** COMMAND:np.nanmin(data['profile_lat'].data)"
  lon_uv:
    standard_name: "longitude"
    units: "degrees_east"
    long_name: "Profile Center Eastward Current"
    comment: "Longitude corresponding to the mid-point of the profile"
    observation_type: "measured"
    platform: "platform"
    reference: "WGS84"
    valid_max: "** COMMAND:np.nanmax(data['lon_uv'].data)"
    valid_min: "** COMMAND:np.nanmin(data['lat_uv'].data)"
  lat_uv:
    standard_name: "latitude"
    units: "degrees_north"
    long_name: "Profile Center Northward Current"
    comment: "Longitude corresponding to the mid-point of the profile"
    observation_type: "measured"
    platform: "platform"
    reference: "WGS84"
    valid_max: "** COMMAND:np.nanmax(data['lon_uv'].data)"
    valid_min: "** COMMAND:np.nanmin(data['lat_uv'].data)"
  v:
    standard_name: "northward_sea_water_velocity"
    long_name: "northward_sea_water_velocity"
    observation_type: "calculated"
    units: "m s-1"
    accuracy: " "
    platform: "platform"
    ancillary_variables: "m_final_vy"
    valid_max: "** COMMAND:np.nanmax(data['v'].data)"
    valid_min: "** COMMAND:np.nanmin(data['v'].data)"
    comment: "measured depth-average of sea water velocity pointing positive North, computed as an average over a glider dive segement between surfacing locations. The value comes from m_water_final_vy"
  u:
    standard_name: "eastward_sea_water_velocity"
    long_name: "eastward_sea_water_velocity"
    observation_type: "calculated"
    platform: "platform"
    units: "m s-1"
    accuracy: " "
    valid_max: "** COMMAND:np.nanmax(data['u'].data)"
    valid_min: "** COMMAND:np.nanmin(data['u'].data)"
    ancillary_variables: "m_final_vx"
    comment: "measured depth-average of sea water velocity pointing positive East, computed as an average over a glider dive segement between surfacing locations. The value comes from m_water_final_vx"
## CTD
  conductivity:
    standard_name: "sea_water_electrical_conductivity"
    long_name: "sea_water_electrical_conductivity"
    units: "S m-1"
    accuracy: ""
    ancillary_variables: "sci_water_cond"
    instrument: "instrument_ctd"
    observation_type: "measured"
    accuracy: "0.005"
    platform: "platform"
    precision: "** COMMAND:np.nanmedian(np.diff(data['conductivity'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(data['time'].data[~np.isnan(data['conductivity'])]))"
    valid_max: "** COMMAND:np.nanmax(data['conductivity'].data)"
    valid_min: "** COMMAND:np.nanmin(data['conductivity'].data)"
    comment: "ambient seawater conductivity measured by glider CTD sensor sci_water_cond"
  temperature:
    standard_name: "sea_water_temperature"
    long_name: "sea_water_temperature"
    units: "degrees_C"
    accuracy: "0.001"
    ancillary_variables: "sci_water_temp"
    instrument: "instrument_ctd"
    observation_type: "measured"
    platform: "platform"
    precision: "** COMMAND:np.nanmedian(np.diff(data['temperature'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(data['time'].data[~np.isnan(data['temperature'])]))"
    valid_max: "** COMMAND:np.nanmax(data['temperature'])"
    valid_min: "** COMMAND:np.nanmin(data['temperature'])"
    comment: "ambient seawater temperature measured by glider CTD sensor sci_water_temp"
  salinity:
    standard_name: "sea_water_practical_salinity"
    long_name: "sea_water_practical_salinity"
    units: "PSU"
    comment: "practical salinity computed from conductivity, temperature and pressure using the Gibbs-SeaWater (GSW) Oceanographic toolbox (https://www.teos-10.org/software.htm)"
    platform: "platform"
    instrument: "instrument_ctd"
    observation_type: "calculated"
    accuracy: "0.01"
    ancillary_variables: "    "
    precision: "** COMMAND:np.nanmedian(np.diff(data['salinity'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(data['time'].data[~np.isnan(data['salinity'])]))"
    valid_max: "** COMMAND:np.nanmax(data['salinity'].data)"
    valid_min: "** COMMAND:np.nanmin(data['salinity'].data)"
  density:
    standard_name: "sea_water_density"
    long_name: "sea_water_density"
    units: "kg m-3"
    accuracy: "0.01"
    ancillary_variables: "     "
    instrument: "instrument_ctd"
    observation_type: "calculated"
    platform: "platform"
    precision: "** COMMAND:np.nanmedian(np.diff(data['density'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(data['time'].data[~np.isnan(data['density'])]))"
    valid_max: "** COMMAND:np.nanmax(data['density'].data)"
    valid_min: "** COMMAND:np.nanmin(data['density'].data)"
    comment: "in-situ seawater density calculated from salinity, temperature and pressure using the Gibbs-SeaWater (GSW) Oceanographic toolbox (https://www.teos-10.org/software.htm)"
## OXYGEN
  oxygen_sensor_temperature:
    standard_name: "temperature_of_sensor_for_oxygen_in_sea_water"
    long_name: "temperature_of_sensor_for_oxygen_in_sea_water"
    units: "degree_C"
    comment: "temperature of oxygen sensor used to compute oxygen concentration duplicated from sci_oxy4_temperature"
    ancillary_variables: "sci_oxy4_temp"
    observation_type: "measured"
    platform: "platform"
    precision: "** COMMAND:np.nanmedian(np.diff(data['oxygen_sensor_temperature'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(data['time'].data[~np.isnan(data['oxygen_sensor_temperature'])]))"
    valid_max: "** COMMAND:np.nanmax(data['oxygen_sensor_temperature'].data)"
    valid_min: "** COMMAND:np.nanmin(data['oxygen_sensor_temperature'].data)"
  oxygen_concentration:
    standard_name: "mole_concentration_of_dissolved_molecular_oxygen_in_sea_water"
    long_name: "mole_concentration_of_dissolved_molecular_oxygen_in_sea_water"
    units: "micro-mol L"
    comment: "oxygen concentration measured by glider sensor from sci_oxy4_oxygen, compensated for salinity using code from Bittig et al., (2018)."
    ancillary_variables: "      "
    observation_type: "calculated"
    platform: "platform"
    precision: "** COMMAND:np.nanmedian(np.diff(data['oxygen_concentration'].data))"
    resolution: "** COMMAND:np.nanmedian(np.diff(data['time'].data[~np.isnan(data['oxygen_concentration'])]))"
    valid_max: "** COMMAND:np.nanmax(data['oxygen_concentration'].data)"
    valid_min: "** COMMAND:np.nanmin(data['oxygen_concentration'].data)"