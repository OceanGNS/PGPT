

  # GLIDER FLIGHT COMPUTER VARIABLES
  c_ballast_pumped:
    standard_name: "c_ballast_pumped"
    long_name: "commanded_glider_ballast_pumped"
    units: "cm3"
    comment: "-negative is subtraction / + addition"
  c_battpos:
    standard_name: "c_battpos"
    long_name: "commanded_glider_pitch_battery_position"
    units: "in"
    comment: "-negative is towards aft and +positive is towards nose"
  c_de_oil_vol:
    standard_name: "c_de_oil_volume"
    long_name: "commanded_glider_oil_ballast_pumped"
    units: "cm3"
    comment: "-negative is subtraction / + addition"
  c_fin:
    standard_name: "c_fin"
    long_name: "commanded_glider_rudder_angle"
    units: "degree"
    comment: "-negative is port / + starboard"
  m_fin:
    standard_name: "m_fin"
    long_name: "measured_glider_roll"
    units: "degree"
    comment: "-negative is port / + starboard"
  c_heading:
    standard_name: "c_heading"
    long_name: "commanded_glider_heading_angle"
    units: "degree"
    comment: "-negative is port / + starboard"
  c_pitch:
    standard_name: "c_pitch"
    long_name: "commanded_glider_pitch_angle"
    units: "degree"
    comment: "-negative is nose down / + is up"
  c_wpt_lat:
    standard_name: "c_wpt_lat"
    long_name: "commanded_glider_target_waypoint_latitude"
    units: "degree_north"
    comment: "decimal degrees North WGS84 (+90/-90)"
  c_wpt_lon:
    standard_name: "c_wpt_lon"
    long_name: "commanded_glider_target_waypoint_longitude"
    units: "degree_east"
    comment: "decimal degrees East WGS84 (+180/-180)"
  m_ballast_pumped:
    standard_name: "m_ballast_pumped"
    long_name: "measured_glider_ballast_pumped"
    units: "cm3"
    comment: "-negative is subtraction / + addition"
  m_battpos:
    standard_name: "m_battpos"
    long_name: "measured_glider_pitch_battery_position"
    units: "in"
    comment: "-negative is towards aft and +positive is towards nose"
  m_de_oil_vol:
    standard_name: "m_de_oil_volume"
    long_name: "measured_glider_oil_ballast_pumped"
    units: "cm3"
    comment: "-negative is subtraction / + addition"
  m_fin:
    standard_name: "m_fin"
    long_name: "measured_glider_rudder_angle"
    units: "degree"
    comment: "-negative is port / + starboard"
  m_heading:
    standard_name: "m_heading"
    long_name: "measured_glider_heading_angle"
    units: "degree"
    comment: "-negative is port / + starboard"
  m_pitch:
    standard_name: "m_pitch"
    long_name: "measured_glider_pitch_angle"
    units: "degree"
    comment: "-negative is nose down / + is up"
  m_altitude:
    standard_name: "m_altitude"
    long_name: "measured_glider_altitude_above_bottom"
    units: "meter"
    comment: ""
  m_battery:
    standard_name: "m_battery"
    long_name: "measured_glider_main_battery_voltage"
    units: "volts"
    comment: ""
  m_pressure:
    standard_name: "m_pressure"
    long_name: "measured_glider_pressured_sensor_reading"
    units: "bar"
    comment: "measured by glider aft-cap MICRON pressure transducer"
  m_depth:
    standard_name: "m_depth"
    long_name: "measured_glider_depth_readings"
    units: "meter"
    comment: "depth is computed from m_pressure"
  m_water_depth:
    standard_name: "m_water_depth"
    long_name: "measured_glider_water_depth"
    units: "meter"
    comment: "depth is computed from adding m_depth+m_altitude"
  m_gps_lat:
    standard_name: "m_gps_lat"
    long_name: "measured_glider_gps_latitude"
    units: "degree_north"
    comment: "decimal degrees North WGS84 (+90/-90), recorded by glider at surface"
  m_gps_lon:
    standard_name: "m_gps_lon"
    long_name: "measured_glider_gps_longitude"
    units: "degree_east"
    comment: "decimal degrees East WGS84 (+180/-180), recorded by glider at surface"
  m_lat:
    standard_name: "m_lat"
    long_name: "measured_glider_dead_reckoned_latitude"
    units: "degree_north"
    comment: "decimal degrees North WGS84 (+90/-90), recorded using glider compass"
  m_lon:
    standard_name: "m_lon"
    long_name: "measured_glider_dead_reckoned_longitude"
    units: "degree_east"
    comment: "decimal degrees East WGS84 (+180/-180), recorded using glider compass"
  m_water_vy:
    standard_name: "m_water_vy"
    long_name: "measured_glider_northward_water_velocity"
    units: "m s-1"
    comment: ""
  m_water_vx:
    standard_name: "m_water_vx"
    long_name: "measured_glider_eastward_water_velocity"
    units: "m s-1"
    comment: ""
  m_final_water_vy:
    standard_name: "m_final_water_vy"
    long_name: "measured_final_glider_northward_water_velocity"
    units: "m s-1"
    comment: ""
  m_final_water_vx:
    standard_name: "m_final_water_vx"
    long_name: "measured_final_glider_eastward_water_velocity"
    units: "m s-1"
    comment: ""
  m_initial_water_vy:
    standard_name: "m_initial_water_vy"
    long_name: "measured_initial_glider_northward_water_velocity"
    units: "m s-1"
    comment: ""
  m_initial_water_vx:
    standard_name: "m_initial_water_vx"
    long_name: "measured_initial_glider_eastward_water_velocity"
    units: "m s-1"
    comment: ""
  x_dr_state:
    standard_name: "x_dr_state"
    long_name: "estimated_glider_dead_reckoning_state"
    units: "enum"
    comment: "this variable contains the glider states (surfacing=2, about to surface=1, about to dive =3, diving=4) which can be used to parse apart the glider gps locations for dead-reckoning error estimation and correction of the measured glider compass underwater positions."
  m_present_time:
    standard_name: "m_present_time"
    long_name: "measured_glider_flight_computer_time"
    units: "s"
    comment: "seconds since 1970, epoch time stamp on glider flight computer for all glider flight computer variables and sensors"
  # GLIDER SCIENCE COMPUTER VARIABLES
  sci_m_present_time:
    standard_name: "sci_m_present_time"
    long_name: "science_measured_glider_science_computer_time"
    units: "s"
    comment: "seconds since 1970, epoch time stamp on glider science computer for all glider science variables and sensors"
  sci_m_science_on:
    standard_name: "sci_m_science_on"
    long_name: "science_measured_glider_science_computer_state"
    units: "enum"
    comment: "off=0, on=1"
  sci_water_cond:
    standard_name: "sci_water_cond"
    long_name: "science_measured_sea_water_electrical_conductivity"
    units: "S m-1"
    comment: "  "
  sci_water_pressure:
    standard_name: "sci_water_pressure"
    long_name: "science_measured_sea_water_pressure"
    units: "dbar"
    comment: ""
  sci_water_temp:
    standard_name: "sci_water_temp"
    long_name: "science_measured_sea_water_temperature"
    units: "degree_C"
    comment: ""
  sci_water_salinity:
    standard_name: "sci_water_salinity"
    long_name: "science_computed_sea_water_practical_salinity"
    units: "PSU"
    comment: "from sci_water_temp, sci_water_cond, sci_water_pressure"
  # RBR CTD
  sci_rbrctd_cond_cell_temp_00:
    standard_name: "sci_rbrctd_cond_cell_temp_00"
    long_name: "rbr_ctd_temperature_of_conductivity_cell"
    units: "degree_C"
    comment: "internal temperature of the RBR conductivity cell used for correcting salinity and temperature in post-processing"
  sci_rbrctd_conductivity_00:
    standard_name: "sci_rbrctd_conductivity_00"
    long_name: "rbr_ctd_conductivity_of_conductivity_cell"
    units: "S m-1"
    comment: "conductivity of the RBR conductivity cell used for correcting salinity and temperature in post-processing"
  sci_rbrctd_temperature_00:
    standard_name: "sci_rbrctd_temperature_00"
    long_name: "rbr_ctd_thermistor_temperature"
    units: "degree_C"
    comment: "temperature readings of the external RBR thermistor measuring ambient seawater temperature"
  sci_rbrctd_seapressure_00:
    standard_name: "sci_rbrctd_seapressure_00"
    long_name: "rbr_ctd_sea_water_pressure"
    units: "dbar"
    comment: "used in sci_water_pressure"
  sci_rbrctd_salinity_00:
    standard_name: "sci_rbrctd_salinity_00"
    long_name: "rbr_ctd_computed_practical_salinity"
    units: "PSU"
    comment: "salinity computed by RBR CTD from temperature, pressure and conductivity"
  # Oxygen Optode
  sci_oxy4_calphase:
    standard_name: "sci_oxy4_calphase"
    long_name: "oxygen_optode_calibrated_phase_readings"
    units: "degree"
    comment: "temperature calibrated and compensated phase angle output of the oxygen optode used in the 7 foil coeffiecients SVU Formula Uchida et al. (2008) to compute oxygen."
  sci_oxy4_tcphase:
    standard_name: "sci_oxy4_tcphase"
    long_name: "oxygen_optode_temperature_compensated_phase_readings"
    units: "degree"
    comment: "temperature compensated phase angle output of the oxygen optode. Input is used in the 4x7 coefficient oxygen foil model to compute the oxygen concentration from temperature and tcphase."
  sci_oxy4_oxygen:
    standard_name: "sci_oxy4_oxygen"
    long_name: "oxygen_optode_molar_oxygen_concentration"
    units: "micro-mol L"
    comment: "oxygen concentration of the glider optode sensor computed internally from sci_oxy4_calphase and sci_oxy4_temp but not compensated for varying salinity. Salinity is set internaly to S=0 PSU"
  sci_oxy4_temp:
    standard_name: "sci_oxy4_temp"
    long_name: "oxygen_optode_temperature"
    units: "degree_C"
    comment: "oxygen sensor thermistor readings"
  sci_oxy4_saturation:
    standard_name: "sci_oxy4_saturation"
    long_name: "oxygen_optode_sea_water_saturation"
    units: "1"
    comment: "oxygen sensor seawater saturation computed internally from thermistor readings sci_oxy4_temp using forumlae from Benson and Krause (1984), as fitted by Garcia and Gordon (1992, 1993), but not accounting for salinity"
